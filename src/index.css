:root {
    --bground: #75c6e2;
    --calc: #333;
    --display: #444;
    --ACButton: #bc0000;
    --ops: #ef8d14;
    --numbers: #1c1c90;
    --equalsButton: rgb(30, 90, 30);
    --text: #eee;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: monospace;
    font-size: min(max(6px, 1.5vh), 12px);
    /* outline: 1px solid red;  */ /* For debugging purposes */
}

body {
    background-color: var(--bground);
}

.App {
    display: flex;
    height: 100vh;
    align-items: center;
    justify-content: center;
}

/* For troubleshooting */
.ts {
    font-size: 1.5rem;
}

.calculator {
    /* Mobile first */
    width: 100vw;
    height: 100vh;
    background-color: var(--calc);
    padding: 1.2em;
    box-shadow: 0 0 30px 10px rgba(0, 0, 0, 0.3),
        3px 3px 1px 3px rgb(26, 26, 26), 2px 2px 1px 3px inset rgb(89, 89, 89);
}

.display {
    min-height: 7rem;
    padding: 0.1em 0.2em;
    margin-bottom: 1.5em;
    border-radius: 0.2rem;
    text-align: right;
    background-color: var(--display);
    box-shadow: 1px 1px 2px 2px inset #212121;
}

.preview {
    font-size: 1.5rem;
    color: #999;
}

#display {
    font-size: 2.5rem;
    color: var(--text);
    overflow-wrap: break-word; /* Keeps all the numbers visible */
}

.keyPad {
    height: auto;
    display: grid;
    gap: 1em;
    grid-template-areas:
        'AC div mult CE'
        '. . . minus'
        '. . . plus'
        '. . . equal'
        'zero zero dec equal';
}

.divide {
    grid-area: div;
}

.multiply {
    grid-area: mult;
}

.clearEntry {
    grid-area: CE;
}

.minus {
    grid-area: minus;
}

.plus {
    grid-area: plus;
}

.decimal {
    grid-area: dec;
}

.zero {
    grid-area: zero;
}

.button {
    appearance: none;
    border: none;
    color: var(--text);
    text-shadow: 0px 0px 2px #000, -1px -1px 1px #000;
    border-radius: 0.8rem;
    cursor: pointer;
}

.topRow {
    height: 9rem;
}

.opButton,
.equalButton {
    outline: 1px solid white;
}

.numButton,
.equalButton {
    font-size: 5rem;
    padding: 0.35em;
}

.button:hover {
    opacity: 0.8;
}

.opButton {
    font-size: 3.5rem;
    font-weight: 900;
    padding: 0.3em;
    background-color: var(--ops);
    box-shadow: 2px 2px 1px 1px #824700, 1px 1px 2px 1px inset #ffc278;
}

.clearAll {
    grid-area: AC;
    background-color: var(--ACButton);
    box-shadow: 2px 2px 1px 1px #580000, 1px 1px 2px 1px inset #ff0000;
}

.numButton {
    outline: 1px solid red;
    background-color: var(--numbers);
    box-shadow: 2px 2px 1px 1px #000083, 1px 1px 2px 1px inset #3434ff;
}

.equalButton {
    grid-area: equal;
    font-weight: 900;
    background-color: var(--equalsButton);
    box-shadow: 2px 2px 1px 1px #580000, 1px 1px 2px 1px inset #ff0000;
}

/* Button press animation */
.button:active {
    opacity: 1;
    box-shadow: none;
    transform: translateX(1px) translateY(1px);
}

/* Media queries */
@media only screen and (min-width: 450px) {
    .calculator {
        margin: 1em;
        max-width: 30rem;
        height: auto;
        border-radius: 1.2rem;
    }

    .topRow {
        height: 8rem;
    }

    .opButton {
        font-size: 3rem;
        padding: 0.3em;
    }

    .numButton,
    .equalButton {
        font-size: 4rem;
        padding: 0.4em;
    }
}
